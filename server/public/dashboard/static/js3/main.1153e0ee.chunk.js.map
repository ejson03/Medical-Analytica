{"version":3,"sources":["components/header/AppHeader.js","components/stats/Stats.js","containers/Stats.js","actions/actions.js","actions/ActionTypes.js","services/bdb.js","components/transaction/Transaction.js","containers/Transaction.js","services/utils.js","components/block/Block.js","containers/Block.js","components/modal/AppModal.js","containers/AppModal.js","components/timeline/Timeline.js","containers/Timeline.js","components/footer/AppFooter.js","App.js","registerServiceWorker.js","reducers/Transaction.js","reducers/Modal.js","reducers/Stats.js","reducers/Blocks.js","reducers/index.js","services/sockets.js","index.js"],"names":["AppHeader_AppHeader","react_default","a","createElement","Header","id","className","size","Item","aria-labelledby","xlinkHref","react","Stats_Stats","activeIndex","Menu","inverted","pointing","secondary","Container","fluid","as","active","this","props","name","context","state","lastBlock","connected","containers_Stats","Object","es","Stats","ui_mapper_config","contextName","actions_setModal","title","content","open","type","actions_updateStats","blockHeight","API_PATH","bigchaindb_config","secure","host","port","api","conn","bigchaindb_driver_cjs2_min","Transaction_Transaction","onTxClick","Card","operation","toLowerCase","raised","centered","onClick","handleClick","bind","Content","txId","Meta","Description","asset","desc","containers_Transaction","ownProps","rawTx","Transaction","block","JSON","stringify","extractValue","dispatch","data","mapKey","result","split","map","val","getPosition","document","getElementById","getBoundingClientRect","Block_Block","maxTxWidth","maxTitleHeight","maxTxHeight","headerHeight","height","menuHeight","viewPortHeight","Math","max","documentElement","clientHeight","window","innerHeight","heightRemainig","_this","onBlockClick","_this2","calc","predictBlockSize","blockTitleStyle","minWidth","maxWidth","blockStyle","maxHeight","style","prevBlock","value","index","key","maxTx","floor","maxCol","ceil","length","containers_Block","keys","getBlock","then","components_modal_AppModal","close","onClose","Modal","dimmer","closeIcon","containers_AppModal","components_timeline_Timeline","Grid","blockNo","getPrevBlock","indexOf","containers_Timeline","Blocks","AppFooter_AppFooter","rel","target","href","src_App_0","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","initialState","reducers_Transaction","arguments","undefined","action","hasOwnProperty","blockId","raw","assign","Modal_initialState","reducers_Modal","Stats_initialState","totalTx","reducers_Stats","connectionText","Blocks_initialState","reducers_Blocks","includes","unshift","maxBlocks","splice","slice","reducers","redux","sockets_connected","sockets_protocol","sockets","socket","WebSocket","ws_port","validTx","onopen","onmessage","event","parse","transaction_id","getTransaction","txData","actions_checkBlocks","onclose","store","redux_devtools_extension","redux_thunk_es","react_dom_default","render","URL","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1153e0ee.chunk.js","sourcesContent":["import React, { Component }  from 'react'\nimport { Header, Item } from 'semantic-ui-react'\nimport './AppHeader.css';\n\nexport default class AppHeader extends Component {\n    render() {\n        return(\n        <Header id=\"appHeader\" className=\"App-header\" size=\"small\">\n        <Item className=\"logo-item\">\n        <svg className=\"logo logo--sm logo--white--green\" aria-labelledby=\"title\">\n          <use xlinkHref={process.env.PUBLIC_URL+'/img/logo.svg#logo'}/>\n        </svg>\n        </Item>\n        </Header>\n        )\n    }\n}","import React, { Component }  from 'react'\nimport { Menu, Container } from 'semantic-ui-react'\nimport './Stats.css';\n\nexport default class Stats extends Component {\n    activeIndex = 0;\n    render() {\n        return(\n        <Menu  inverted={true} pointing={true} secondary={true} size='small'>\n        <Container fluid={true}>\n          <Menu.Item as='div' active>\n            {this.props.name}\n          </Menu.Item>\n          <Menu.Item as='div' >\n            {'Source:' }\n            <span>{this.props.context}</span>\n          </Menu.Item>\n          <Menu.Item as='div' >\n            {'Block Height: '}\n            <span>{this.props.state.lastBlock}</span>\n          </Menu.Item>\n         <div className=\"connected\">\n          <Menu.Item as='div' className=\"connRight\">\n            <span>{this.props.state.connected}</span>\n          </Menu.Item>\n          </div> \n        </Container>\n      </Menu>\n        )\n    }\n}","import { connect } from 'react-redux'\nimport Stats from '../components/stats/Stats'\nimport UIMap from '../configs/ui-mapper.config.json';\n\nexport default connect(\n  (state) => {\n    const stats = state.Stats;\n    const context = UIMap.contextName\n    return {state: stats, context: context};\n  })(Stats)","import * as types from './ActionTypes'\n\nexport const validTransaction = (txId, blockId, raw) => ({\n    type: types.MESSAGE_RECEIVED,\n    txId,\n    blockId,\n    raw\n});\n\nexport const setModal = (title, content, open) => ({\n    type: types.SET_MODAL,\n    title,\n    content,\n    open\n})\n\nexport const updateStats = (connected, blockHeight) => ({\n    type: types.UPDATE_STATS,\n    connected,\n    blockHeight\n})\n\nexport const checkBlocks = (blockId) => ({\n    type: types.CHECK_BLOCKS,\n    blockId\n})\n","export const MESSAGE_RECEIVED = 'VALID_TX_RECEIVED';\nexport const SET_MODAL = 'SET_MODAL';\nexport const UPDATE_STATS = 'UPDATE_STATS';\nexport const CHECK_BLOCKS = 'CHECK_BLOCKS';","import * as driver from 'bigchaindb-driver';\nimport bigchaindb from '../configs/bigchaindb.config.json'\n\nconst protocol = bigchaindb.secure?'https://':'http://';\n\nconst API_PATH = protocol + bigchaindb.host + \":\" + bigchaindb.port +  bigchaindb.api\nconst conn = new driver.Connection(API_PATH);\n\nexport const getTransaction = (txId) => {\n    return conn.getTransaction(txId).then(value => {\n        return value\n    });\n}\n\nexport const getBlock = (blockHeight) => {\n    return conn.getBlock(blockHeight);\n}","import React, { Component }  from 'react'\nimport { Card } from 'semantic-ui-react'\nimport './Transaction.css';\n\n \nexport default class Transaction extends Component {\n    handleClick(){\n        this.props.onTxClick(this.props.state)\n    }\n\n    render() {\n        return(\n            <Card className={this.props.state.operation.toLowerCase()+\" payloadShadow\"} raised={true} centered={true} onClick={this.handleClick.bind(this)}>\n                <Card.Content className=\"cardHeader\">\n                    <span className=\"left floated\"><i className=\"circle icon\"></i></span>\n                    <span className=\"right floated trim\">{this.props.txId}</span>\n                </Card.Content>\n            <Card.Content className=\"cardBody\">\n                <Card.Meta className=\"greenColor\">{this.props.state.operation}</Card.Meta>\n                <Card.Description className=\"font17\">\n                { this.props.state.operation==='TRANSFER' &&\n                (<div>\n                <span className=\"left floated upperCase\">Asset Id:</span>\n                <span className=\"right floated trim\">{this.props.state.asset.id}</span>\n                </div>\n                )\n                }\n                <div className={this.props.state.operation.toLowerCase()+\"Desc left floated marginTop4 mb10 wordWrap\"}>\n                {this.props.desc}</div>\n            </Card.Description>\n            </Card.Content>\n        </Card>\n        )\n    }\n}","import { connect } from 'react-redux'\nimport { setModal } from '../actions/actions'\nimport Transaction from '../components/transaction/Transaction'\nimport UIMap from '../configs/ui-mapper.config.json';\n\nexport default connect(\n    (state, ownProps) => {\n        const rawTx = state.Transaction[ownProps.block][ownProps.txId];\n        const desc = rawTx.operation==='CREATE'?JSON.stringify(extractValue('create.description', rawTx)):JSON.stringify(extractValue('transfer.description', rawTx));\n        return {state: rawTx, desc: desc};\n    },\n    dispatch => ({\n        onTxClick: data =>{\n             dispatch(setModal('Transaction Details', data, true));\n        }\n    })\n\n)(Transaction)\n\n\nfunction extractValue(mapKey, state) {\n    let result  = state; // eslint-disable-next-line\n    UIMap[mapKey].split('.').map( val => {\n        result = result[val];\n    });\n    return result;\n}","export function getPosition(id) {\n    return document.getElementById(id).getBoundingClientRect();\n}\n\nexport function getViewportHeight() {\n    return Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n}","import React, { Component }  from 'react'\nimport Transaction from '../../containers/Transaction';\nimport './Block.css';\nimport * as utils from '../../services/utils'; \n\nexport default class Block extends Component {\n    maxTxWidth = 324;\n    maxTitleHeight = 20;\n    maxTxHeight = 300;\n    headerHeight = utils.getPosition('appHeader').height;\n    menuHeight = utils.getPosition('dash').height;\n    viewPortHeight = utils.getViewportHeight();\n    heightRemainig = this.viewPortHeight - this.headerHeight - this.menuHeight;\n    \n    handleClick(){\n        this.props.onBlockClick(this.props.block);\n    }\n\n    render() {\n        const calc = this.predictBlockSize();\n        const blockTitleStyle = {\n            minWidth: calc.maxWidth+'px',\n            maxWidth: calc.maxWidth+'px',\n        }\n        const blockStyle = {\n            minWidth: calc.maxWidth+'px',\n            maxWidth: calc.maxWidth+'px'\n        }\n        blockStyle['maxHeight'] = calc.maxHeight + 'px';\n        \n        return(\n            <div className=\"parent\">\n            <div className=\"blockTitle\"  style={blockTitleStyle} onClick={this.handleClick.bind(this)}>\n                <span id='title'>Block</span>\n                <span className=\"blockNo\" id={'title-'+this.props.block}>#{this.props.block}</span>\n            </div>\n            <div id={this.props.block} style={blockStyle} className=\"four wide column bgreen cards box\">\n            <span id={'back-'+this.props.block} className={this.props.block+' dot back'}>\n            {this.props.prevBlock && (<div className=\"line\"></div>)}\n            </span>\n            <span id={'front-'+this.props.block} className={this.props.block+' dot front'}></span>\n            {   this.props.state.map((value, index) => {\n                return <Transaction key={value} txId={value} block={this.props.block}></Transaction>\n                })\n            }\n            \n            </div>\n            </div>\n        )\n    }\n\n    predictBlockSize(){\n        const maxTx = Math.floor(this.heightRemainig/this.maxTxHeight);\n        const maxCol = Math.ceil(this.props.state.length / maxTx);\n        const maxRow = Math.ceil(this.props.state.length/ maxCol);\n        const maxHeight = maxRow*this.maxTxHeight;\n        let maxWidth = 0;\n        if(this.props.state.length < maxTx){\n            maxWidth = this.maxTxWidth;\n        }else{\n         maxWidth = maxCol*this.maxTxWidth\n        }\n        return {maxWidth, maxHeight};\n    }\n}","import { connect } from 'react-redux'\nimport { setModal } from '../actions/actions'\nimport * as bdb from '../services/bdb';\nimport Block from '../components/block/Block'\n\n\nexport default connect(\n    (state, ownProps) => {\n        if(state.Transaction[ownProps.block]){\n            return {state: Object.keys(state.Transaction[ownProps.block])}\n        }else{\n            return {state: []}\n        }\n    },\n    dispatch => ({\n        onBlockClick: data =>{\n            bdb.getBlock(data).then(result => {\n             dispatch(setModal('Block Details', result, true));\n            })\n        }\n    })\n\n)(Block)\n","import React, { Component } from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport './AppModal.css';\nclass AppModal extends Component {\n  open = false;\n  close = () => {\n    this.props.onClose();\n  }\n  render() {\n    return (\n      <div>\n        <Modal dimmer={true} open={this.props.state.open} onClose={this.close} closeIcon>\n          <Modal.Header className=\"modalHeader\"><span>{this.props.state.title}</span></Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <pre className=\"modal-trim\">{JSON.stringify(this.props.state.content,null, 2)}</pre>\n            </Modal.Description>\n          </Modal.Content>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default AppModal;\n","import { connect } from 'react-redux'\nimport AppModal from '../components/modal/AppModal'\nimport { setModal } from '../actions/actions'\n\nexport default connect(\n  (state) => ({\n          state: state.Modal\n      }\n  ),\n  dispatch => ({\n      onClose: () =>{\n           dispatch(setModal('', '', false))\n      }\n  }))(AppModal)","import React, { Component } from 'react';\nimport { Container, Grid } from 'semantic-ui-react'\nimport Stats from '../../containers/Stats'\nimport Block from '../../containers/Block'\nimport AppModal from '../../containers/AppModal';\nimport './Timeline.css';\n\nclass Timeline extends Component {\n  render() {\n    return (\n      <Container fluid={true} className='timeline'>\n      <div id=\"dash\"><Stats name='Dashboard'/></div>\n      <div  id=\"blockDisplay\" className='blockDisplay'>\n      <Grid className=\"letOverflow\">\n      {\n        this.props.state.map((blockNo) => {\n            return <Block key={blockNo} block={blockNo} prevBlock={this.props.state[this.getPrevBlock(blockNo)]}></Block>\n        })\n      }\n      </Grid>\n      </div>\n      <AppModal/>\n      </Container>\n    );\n  }\n  \n  getPrevBlock(blockNo){\n    let result = this.props.state.indexOf(blockNo)+1;\n    if(result === this.props.state.length) return -1;\n    return result;\n  }\n}\n\nexport default Timeline;\n","import { connect } from 'react-redux'\nimport Timeline from '../components/timeline/Timeline'\nconst mapStateToProps = state => ({\n  state: state.Blocks\n});\n\nexport default connect(mapStateToProps)(Timeline);","import React, { Component }  from 'react'\nimport './AppFooter.css';\n\nexport default class AppFooter extends Component {\n    render() {\n        return(\n            <div className=\"footer__copyright appfooter\">\n                <div> \n                    <a className=\"menu__link\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.bigchaindb.com/\">© 2018 BigchainDB GmbH</a>\n                    <a className=\"menu__link\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.bigchaindb.com/terms/\">Terms</a>\n                    <a className=\"menu__link\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.bigchaindb.com/privacy/\">Privacy</a>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react'\nimport AppHeader from './components/header/AppHeader'\nimport Timeline from './containers/Timeline'\nimport AppFooter from './components/footer/AppFooter'\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Container fluid={true} className=\"App\" >\n      <AppHeader/>\n      <Container fluid={true}>\n      <Timeline/>\n      </Container>\n      <AppFooter/>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {}\nconst Transaction = (state = initialState, action) => {\n  switch (action.type) {\n    case 'VALID_TX_RECEIVED':\n      if (!state.hasOwnProperty(action.blockId)){\n        state[action.blockId] = {};\n        state[action.blockId][action.txId] = action.raw;\n      }else{\n        state[action.blockId][action.txId] = action.raw;\n      }\n      return Object.assign({}, state, state);\n    default:\n      return state;\n  }\n}\n\nexport default Transaction;","const initialState = {\n    title: '',\n    content: null\n}\n\nconst Modal = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_MODAL':\n      return Object.assign({}, {content: action.content, title: action.title, open: action.open});\n    default:\n      return state;\n  }\n}\n\nexport default Modal;","import bigchaindb from '../configs/bigchaindb.config.json'\n\nconst initialState = {\n    connected: 'Disconnected',\n    lastBlock: 0,\n    totalTx: 0\n}\n\nconst Stats = (state = initialState, action) => {\n  switch (action.type) {\n    case 'UPDATE_STATS':\n      const connectionText = action.connected?'Connected to: '+ bigchaindb.host:'Disconnected';\n      return Object.assign({}, {connected: connectionText, lastBlock: action.blockHeight, totalTx: action.totalTx});\n    default:\n      return state;\n  }\n}\n\nexport default Stats;","import uimapper from '../configs/ui-mapper.config.json'\nconst initialState = [];\nconst Blocks = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CHECK_BLOCKS':\n      if (!state.includes(action.blockId)){\n        state.unshift(action.blockId);\n      }\n      if(state.length > uimapper.maxBlocks){\n        state.splice(uimapper.maxBlocks, (state.length-uimapper.maxBlocks));\n      }\n      return state.slice();\n    default:\n      return state;\n  }\n}\n\nexport default Blocks;","import { combineReducers } from 'redux'\nimport Transaction from './Transaction'\nimport Modal from './Modal'\nimport Stats from './Stats'\nimport Blocks from './Blocks'\n\nconst appReducer = combineReducers({\n    Transaction,\n    Modal,\n    Stats,\n    Blocks\n})\n\nexport default appReducer\n","import { validTransaction, updateStats, checkBlocks } from '../actions/actions';\nimport { getTransaction } from './bdb'\nimport bigchaindb from '../configs/bigchaindb.config.json'\n\nlet connected = false;\nconst protocol = bigchaindb.secure?'wss://':'ws://';\n\nconst setupSocket = (dispatch) => {\n\n    const socket = new WebSocket(protocol + bigchaindb.host.split(':')[0]\n                                +':'\n                                +bigchaindb.ws_port\n                                +bigchaindb.api\n                                +bigchaindb.validTx)\n  \n    socket.onopen = () => {\n      connected = true;\n      dispatch(updateStats(connected, '---', '---'));\n    }\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      getTransaction(data.transaction_id).then(txData => {\n        dispatch(validTransaction(data.transaction_id, data.height, txData));\n        dispatch(checkBlocks(data.height));\n        dispatch(updateStats(connected, data.height));\n      });\n    }\n    socket.onclose = () => {\n      connected = false;\n    }\n  \n    return socket\n  }\n\nexport default setupSocket\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk';\nimport 'semantic-ui-css/semantic.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport appReducer from './reducers/index'\nimport setupSocket from './services/sockets';\n\nconst store = createStore(appReducer, composeWithDevTools(applyMiddleware(\n  thunk\n)));\n\nsetupSocket(store.dispatch);\n \nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n      document.getElementById('root')\n    );\nregisterServiceWorker();"],"sourceRoot":""}