version: "3.7"
services:
  bigchaindb:
    container_name: bigchaindb 
    build:
      context: bigchaindb
      dockerfile: Dockerfile-all-in-one
    ports:
      - "9984:9984"
      - "9985:9985"
      - "27017:27017"
    command: "bash ./pkg/scripts/all-in-one.bash"
    restart: always

  vault:
    container_name: vault
    image: "vault"
    env_file:
      - .env
    ports:
      - 8200:8200
    cap_add:
      - "IPC_LOCK"
    environment:
      VAULT_LOCAL_CONFIG: '{"backend" : {"file" : {"path" : "/vault/file"}}}'
    volumes:
      - vault_config:/vault/config
      - vault_policies:/vault/policies
      - vault_data:/vault/data
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 2s
      timeout: 3s
      retries: 30
    restart: always
   
  neo4j:
    image: neo4j
    container_name: neo4j
    ports: 
        - "7474:7474"
        - "7373:7373"
        - "7687:7687"
    environment:
        - NEO4J_AUTH=none
    volumes:
      - neo4j_data:/data 
      - neo4j_logs:/logs 
      - neo4j_import:/var/lib
      - neo4j_plugins:/plugins 
    healthcheck:
      test: wget http://neo4j:7474/browser -O -
      interval: 1s
      timeout: 1s
      retries: 25 
    restart: always
  
  server:
    container_name: rasa-server
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
      target: chatbot
    # volumes:
    #   - ./chatbot:/app
    ports:
      - 5005:5005
    depends_on:
      - action
  
  action:
    container_name: rasa-action
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
      target: action
    ports:
      - "5055:5055"
    depends_on:
      - bigchaindb
      - neo4j
    volumes:
      - ./actions:/app

  main:
    container_name: main
    env_file:
      - .env
    build:
      context: ./server
      dockerfile: Dockerfile
      target: app-backend
    volumes:
      - ./server:/app/server
    command: npm run deploy
    ports:
      - 5000:5000
    restart: always
    depends_on:
      - server
      - vault

  # nginx:
  #   container_name: "nginx"
  #   restart: unless-stopped
  #   build:
  #     context: nginx
  #   ports:
  #     - 8443:8443
  #   depends_on:
  #     - server

  build_medicalgraph:
    env_file:
      - .env
    build:
      context: ./QA-engine/Knowledge-Base
      dockerfile: Dockerfile
    environment:
      NEO4J_URL: "neo4j"
    depends_on: 
      neo4j:
        condition: service_healthy
    restart: always

volumes:
  tm_data: {}
  neo4j_data: {}
  neo4j_logs: {}
  neo4j_import: {}
  neo4j_plugins: {}
  vault_config: {}
  vault_policies: {}
  vault_data: {}
  vault_file: {}
  vault_unseal: {}
